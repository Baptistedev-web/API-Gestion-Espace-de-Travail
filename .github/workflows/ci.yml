name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: docker compose up -d

      - name: Install dependencies
        run: docker compose exec -T php composer install --prefer-dist --no-progress --no-suggest

      - name: Generate JWT keys
        run: |
          docker compose exec -T php mkdir -p config/jwt
          docker compose exec -T php openssl genrsa -aes256 -passout pass:${{ secrets.JWT_PASSPHRASE }} -out config/jwt/private.pem 4096
          docker compose exec -T php openssl rsa -pubout -in config/jwt/private.pem -passin pass:${{ secrets.JWT_PASSPHRASE }} -out config/jwt/public.pem

      - name: Clear Symfony cache
        run: docker compose exec -T php php bin/console cache:clear --env=test

      - name: Create database
        run: docker compose exec -T php php bin/console doctrine:database:create --if-not-exists --env=test

      - name: Check for migrations
        run: |
          if [ -z "$(ls -A migrations/)" ]; then
            echo "No migrations found, skipping migration step.";
            exit 0;
          fi

      - name: Run database migrations
        run: docker compose exec -T php php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Load fixtures
        run: docker compose exec -T php php bin/console doctrine:fixtures:load --no-interaction --env=test

      - name: Run tests with coverage
        run: |
          docker compose exec -T php mkdir -p var/coverage
          docker compose exec -T php php bin/phpunit --coverage-clover var/coverage/clover.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: var/coverage/clover.xml
          flags: unittests
          name: code-coverage
          token: ${{ secrets.CODECOV_TOKEN }}
